<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.gpnu.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="cn.edu.gpnu.bean.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="market_price" jdbcType="DOUBLE" property="marketPrice" />
    <result column="activity_price" jdbcType="DOUBLE" property="activityPrice" />
    <result column="sales" jdbcType="BIGINT" property="sales" />
    <result column="proper_age" jdbcType="INTEGER" property="properAge" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="pdate" jdbcType="TIMESTAMP" property="pdate" />
    <result column="stock" jdbcType="BIGINT" property="stock" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, type, market_price, activity_price, sales, proper_age, description, pdate, 
    stock
  </sql>
  <select id="selectByExample" parameterType="cn.edu.gpnu.bean.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.gpnu.bean.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.gpnu.bean.Product">
    insert into product (id, name, type, 
      market_price, activity_price, sales, 
      proper_age, description, pdate, 
      stock)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{marketPrice,jdbcType=DOUBLE}, #{activityPrice,jdbcType=DOUBLE}, #{sales,jdbcType=BIGINT}, 
      #{properAge,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{pdate,jdbcType=TIMESTAMP}, 
      #{stock,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.gpnu.bean.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="activityPrice != null">
        activity_price,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="properAge != null">
        proper_age,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="pdate != null">
        pdate,
      </if>
      <if test="stock != null">
        stock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="activityPrice != null">
        #{activityPrice,jdbcType=DOUBLE},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=BIGINT},
      </if>
      <if test="properAge != null">
        #{properAge,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="pdate != null">
        #{pdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.gpnu.bean.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.activityPrice != null">
        activity_price = #{record.activityPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=BIGINT},
      </if>
      <if test="record.properAge != null">
        proper_age = #{record.properAge,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.pdate != null">
        pdate = #{record.pdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DOUBLE},
      activity_price = #{record.activityPrice,jdbcType=DOUBLE},
      sales = #{record.sales,jdbcType=BIGINT},
      proper_age = #{record.properAge,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      pdate = #{record.pdate,jdbcType=TIMESTAMP},
      stock = #{record.stock,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.gpnu.bean.Product">
    update product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="activityPrice != null">
        activity_price = #{activityPrice,jdbcType=DOUBLE},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=BIGINT},
      </if>
      <if test="properAge != null">
        proper_age = #{properAge,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="pdate != null">
        pdate = #{pdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.gpnu.bean.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DOUBLE},
      activity_price = #{activityPrice,jdbcType=DOUBLE},
      sales = #{sales,jdbcType=BIGINT},
      proper_age = #{properAge,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      pdate = #{pdate,jdbcType=TIMESTAMP},
      stock = #{stock,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>